---
title: "Data Wrangling"
subtitle: "STAT 231 Blog Project"
author: "Gloria Wu, Justyce Williams, Ben Snyderman"
date: today
format: pdf
linestretch: 1.15
highlight-style: arrow
---

```{r}
#| label: setup
#| include: FALSE

knitr::opts_chunk$set(
  # display code as types
  tidy = FALSE, 
  # slightly smaller code font
  size = "small",
  # do not display messages in PDF
  message = FALSE,
  # set default figure width and height
  fig.width = 5, fig.height = 3) 

# improve digit and NA display 
options(scipen = 1, knitr.kable.NA = '')

# load packages
library(tidyverse)
library(ggplot2)
library(stringr)
library(purrr)
library(robotstxt)
library(tidytext)
library(tidyr)
library(dplyr)
library(spotifyr)
library(tidytuesdayR)
library(geniusr)

```

## Variables


## Wrangling

```{r}
#| label: load & basic wrangling

# check if we can scrape
paths_allowed("https://www.billboard.com/charts/hot-100/")
paths_allowed("https://genius.com")
paths_allowed("https://spotify.com")
spotify<-readRDS("data/tt_spotify_songs.Rds")

```



```{r}
#Genius Lyric Data

genius_token(bk0ijdi-fnVwz5XIpGRPtnLTay0aPfDgw_nAnQBejj9svAAULIkzDCLh9BzaL3Lw)

#Will need to figure out how to make this a full data frame eventually 
#lyrics<- data.frame(
 # c(artisit)
#)

#lyrics
lyrics<- get_lyrics_search(artist_name = "Kanye West",
                  song_title = "Good Morning") %>% 
  # get lyric bigrams
  unnest_tokens(bigram, line, token = "ngrams", n = 2) %>%
  # look for good morning
  filter(bigram == "good morning") %>% 
  # count bigram frequency
  nrow()


```



```{r}
#| label: wrangling for 

```



```{r}
#| label: wrangling for 


```



```{r}
#| label: wrangling for 

         
```

```{r}
#| label: save final objects


```

## Sources
